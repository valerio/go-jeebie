name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GO_VERSION: '1.23'
  SDL2_VERSION: '2.30.9'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Go mod download
      run: go mod download
    
    - name: Go vet
      run: go vet ./...
    
    - name: Go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted:"
          gofmt -s -l .
          exit 1
        fi
    
    - name: Build
      run: make build
    
    - name: Run tests
      run: go test ./...
    
    - name: Run Blargg tests
      run: make test-blargg

  sdl2-build:
    if: |
      contains(github.event.head_commit.message, '[sdl2]') ||
      contains(github.event.head_commit.message, '[ci-full]') ||
      contains(github.ref, 'ci-sdl2') ||
      github.event_name == 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    # Platform-specific SDL2 and pkg-config installation
    - name: Install SDL2 and dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update -qq
        sudo apt install -y libsdl2-dev pkg-config
    
    - name: Install SDL2 and dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install sdl2 pkg-config
    
    - name: Install SDL2 and dependencies (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        # Download and extract SDL2 MinGW development files
        Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL/releases/download/release-${{ env.SDL2_VERSION }}/SDL2-devel-${{ env.SDL2_VERSION }}-mingw.tar.gz" -OutFile "SDL2-devel.tar.gz"
        tar -xzf SDL2-devel.tar.gz
        
        # Install pkg-config using Chocolatey
        choco install pkgconfiglite -y
        refreshenv
        
        # Create pkg-config directory and SDL2.pc file
        $sdlPath = "$PWD\SDL2-${{ env.SDL2_VERSION }}\x86_64-w64-mingw32"
        $pkgConfigPath = "$PWD\pkgconfig"
        New-Item -ItemType Directory -Force -Path $pkgConfigPath
        
        # Generate SDL2.pc file for pkg-config
        $pcContent = @"
        prefix=$($sdlPath -replace '\\','/')
        exec_prefix=`${prefix}
        libdir=`${exec_prefix}/lib
        includedir=`${prefix}/include
        
        Name: sdl2
        Description: Simple DirectMedia Layer
        Version: ${{ env.SDL2_VERSION }}
        Requires:
        Conflicts:
        Libs: -L`${libdir} -lmingw32 -lSDL2main -lSDL2
        Cflags: -I`${includedir}/SDL2 -Dmain=SDL_main
        "@
        
        Set-Content -Path "$pkgConfigPath\sdl2.pc" -Value $pcContent
        
        # Set environment variables
        echo "PKG_CONFIG_PATH=$pkgConfigPath" >> $env:GITHUB_ENV
        echo "CGO_ENABLED=1" >> $env:GITHUB_ENV
    
    - name: Verify build tools
      shell: bash
      run: |
        echo "=== Go environment ==="
        go env GOCACHE GOMODCACHE CGO_ENABLED
        echo "=== pkg-config ==="
        which pkg-config || echo "pkg-config not found"
        pkg-config --version || echo "pkg-config not working"
        echo "=== SDL2 check ==="
        pkg-config --cflags --libs sdl2 || echo "SDL2 not found via pkg-config"
    
    - name: Go mod download
      run: go mod download
    
    - name: Build SDL2 variant
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          go build -tags sdl2 -ldflags "-H windowsgui" -o bin/jeebie.exe ./cmd/jeebie
        else
          go build -tags sdl2 -o bin/jeebie ./cmd/jeebie
        fi
    
    - name: Run tests with SDL2
      run: go test -tags sdl2 ./...